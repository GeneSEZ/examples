«IMPORT gpresentation»
«IMPORT gcore»
«EXTENSION AccessHelper»
«EXTENSION GcoreAccessHelper»
«EXTENSION Profile»

«DEFINE Head FOR PRoot -»
«IF hasHTMLHeadMetaData() -»
<!DOCTYPE «getHTMLDoctype() -»>
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=«getHTMLContenttype() -»"> 
  <title>«getHTMLTitle() -»</title>
  <meta name="description" content="«getHTMLDescription() -»">
  <meta name="keywords" content="«FOREACH getHTMLKeywords() AS k SEPARATOR ', ' -»«k -»«ENDFOREACH -»">
  <meta name="language" content="«getHTMLLanguage() -»">
  «FOREACH getHTMLStylesheets() AS stylesheet -» 
  <link rel="stylesheet" type="text/css" href="«stylesheet -»">
  «ENDFOREACH -»
</head>
<body>
  «EXPAND Root::Content FOREACH nestedContents -»
</body>
</html>
«ENDIF -»
«ENDDEFINE»


«DEFINE Div FOR PCompositeArea -»
«IF hasHTMLDiv() -»
<div«EXPAND universalAttrs -»>
  «EXPAND Root::Content FOREACH nestedContents -»
</div>
«ENDIF -»
«ENDDEFINE»


«DEFINE Div FOR PElementArea -»
«IF hasHTMLDiv() -»
<div«EXPAND universalAttrs -»>
  «EXPAND Root::Element FOREACH nestedElements -»
</div>
«ENDIF -»
«ENDDEFINE»


«DEFINE AutoForm FOR PAutomaticallyGeneratedArea -»
«IF hasHTMLAutoForm() -»
<form action="«getHTMLFormAction() -»"«EXPAND optionalAttr(prHTMLForm(), prHTMLMethod()) -»«EXPAND universalAttrs -»>
«LET hasHTMLAutoFormField() ? 
		getHTMLAutoFormField() : 
		getMClassByXmiGuid(getHTMLAutoFormModel()).allProperties().xmiGuid AS fields-»
	«FOREACH fields AS f -»
		«IF getMAttributeByXmiGuid(f).type.metaType == MClass -»
			«IF getHTMLAutoFormInclude().contains(f) -»
				«EXPAND AutoFormField FOREACH ((MClass) getMAssociationRoleByXmiGuid(f).type).allProperties().typeSelect(MAttribute) -»
			«ELSE -»
				«EXPAND AutoFormField FOR getMAssociationRoleByXmiGuid(f) -»
			«ENDIF -»
		«ELSE -»
			«EXPAND AutoFormField FOR getMAttributeByXmiGuid(f) -»
		«ENDIF -»
	«ENDFOREACH -»
«ENDLET -»
<p><input type="Submit"></p>
</form>
«ENDIF -»
«ENDDEFINE»


«DEFINE AutoFormField FOR MAttribute -»
«IF !stereotype.name.contains("ignore") -»
<p>
<label>
«taggedValue.selectFirst(e|e.tag.name == "label" && e.tag.stereotype.name == "label").value»
«IF type == getMElementByXmiGuid("Boolean") -»
<input type="checkbox" name="«name»" value="«name»">
«ELSE -»
<input type="text" name="«name»">
«ENDIF -»
</label>
</p>
«ENDIF -»
«ENDDEFINE»


«DEFINE AutoFormField FOR MAssociationRole -»
«IF multiplicity == 1 -»
<p>
<label>
«taggedValue.selectFirst(e|e.tag.name == "label" && e.tag.stereotype.name == "label").value»
<select name="«name»">
</select>
</label>
</p>
«ELSE -»
«REM»not really possible in HTML«ENDREM»
«ENDIF -»
«ENDDEFINE»


«DEFINE Div FOR PCompositeElement -»
«IF hasHTMLDiv() -»
<div«EXPAND universalAttrs -»>
  «EXPAND Root::Element FOREACH nestedElements -»
</div>
«ENDIF -»
«ENDDEFINE»


«DEFINE P FOR PCompositeElement -»
«IF hasHTMLParagraph() -»
<p«EXPAND universalAttrs -»>
  «EXPAND Root::Element FOREACH nestedElements -»
</p>
«ENDIF -»
«ENDDEFINE»


«DEFINE H FOR PCompositeElement -»
«IF hasHTMLHeading() -»
<h«getHTMLHeadingLevel() -»«EXPAND universalAttrs -»>
  «EXPAND Root::Element FOREACH nestedElements -»
</h«getHTMLHeadingLevel() -»>
«ENDIF -»
«ENDDEFINE»


«DEFINE Link FOR PCompositeElement -»
«IF hasHTMLLink() -»
«LET getHTMLLinkExtern() == 'true' ? 'http://' : '' AS http -»
<a href="«http + name -»"«EXPAND optionalAttr(prHTMLLink(), prHTMLTarget()) -»«EXPAND universalAttrs -»>
  «EXPAND Root::Element FOREACH nestedElements -»
</a>
«ENDLET -»
«ENDIF -»
«ENDDEFINE»


«DEFINE Form FOR PCompositeElement -»
«IF hasHTMLForm() -»
<form action="«getHTMLFormAction() -»"«EXPAND optionalAttr(prHTMLForm(), prHTMLMethod()) -»«EXPAND universalAttrs -»>
  «EXPAND Root::Element FOREACH nestedElements -»
</form>
«ENDIF -»
«ENDDEFINE»


«DEFINE Select FOR PCompositeElement -»
«IF hasHTMLSelect() -»
«EXPAND Label -»
<select«EXPAND inputAttrs -»>
  «EXPAND Root::Element FOREACH nestedElements -»
</select>
«ENDIF -»
«ENDDEFINE»


«DEFINE Fieldset FOR PCompositeElement -»
«IF hasHTMLFieldset() -»
<fieldset«EXPAND universalAttrs -»>
  <legend>«name -»</legend>
  «EXPAND Root::Element FOREACH nestedElements -»
</fieldset>
«ENDIF -»
«ENDDEFINE»


«DEFINE TextField FOR PInput -»
«IF hasHTMLTextField() -»
«EXPAND Label -»
<input type="text"«EXPAND optionalAttr(prHTMLInputElement(), prHTMLValue()) -»«EXPAND optionalAttr(prHTMLTextField(), prHTMLMaxLength()) -»«EXPAND optionalAttr(prHTMLTextField(), prHTMLSize()) -»«EXPAND inputAttrs -»>
«ENDIF -»
«ENDDEFINE»


«DEFINE Checkbox FOR PInput -»
«IF hasHTMLCheckbox() -»
<label>
<input type="checkbox" value="«getHTMLInputElementValue()»"«EXPAND optionalAttr(prHTMLInputElement(), prHTMLChecked()) -»«EXPAND inputAttrs -»>
«getHTMLInputElementLabel()»
</label>
«ENDIF -»
«ENDDEFINE»


«DEFINE Option FOR PInput -»
«IF hasHTMLOption() -»
<option value="«getHTMLInputElementValue() -»"> «name -» </option>
«ENDIF -»
«ENDDEFINE»


«DEFINE P FOR POutput -»
«IF hasHTMLParagraph() -»
<p«EXPAND universalAttrs -»>«output -»</p>
«ENDIF -»
«ENDDEFINE»


«DEFINE H FOR POutput -»
«IF hasHTMLHeading() -»
<h«getHTMLHeadingLevel() -»«EXPAND universalAttrs -»>«output -»</h«getHTMLHeadingLevel() -»>
«ENDIF -»
«ENDDEFINE»


«DEFINE Anchor FOR POutput -»
«IF hasHTMLAnchor() -»
<a name="«name -»"«EXPAND universalAttrs -»>«output -»</a>
«ENDIF -»
«ENDDEFINE»


«DEFINE SimpleText FOR POutput -»
«IF hasHTMLSimpleText() -»
«output -»
«ENDIF -»
«ENDDEFINE»


«DEFINE Link FOR PAction -»
«IF hasHTMLLink() -»
«LET getHTMLLinkExtern() == 'true' ? 'http://' : '' AS http -»
<a href="«http + name -»"«EXPAND optionalAttr(prHTMLLink(), prHTMLTarget()) -»«EXPAND universalAttrs -»>«getHTMLLinkText()»</a>
«ENDLET -»
«ENDIF -»
«ENDDEFINE»


«DEFINE Submit FOR PAction -»
«IF hasHTMLSubmit() -»
<input type="submit"«EXPAND optionalAttr(prHTMLInputElement(), prHTMLValue()) -»«EXPAND universalAttrs -»>
«ENDIF -»
«ENDDEFINE»


«DEFINE universalAttrs FOR PMetaDataAware -»
«EXPAND optionalAttr(prHTMLElement(), prHTMLClass()) -»«EXPAND optionalAttr(prHTMLElement(), prHTMLId()) -»«EXPAND optionalAttr(prHTMLElement(), prHTMLStyle()) -»
«ENDDEFINE»


«DEFINE inputAttrs FOR PElement -»
 name="«name -»"«EXPAND optionalAttr(prHTMLElement(), prHTMLClass()) -» id="«name -»"«EXPAND optionalAttr(prHTMLElement(), prHTMLStyle()) -»
«ENDDEFINE»


«DEFINE optionalAttr(String stereotyp, String taggedValue) FOR PMetaDataAware -»
«LET hasTaggedValue(stereotyp, taggedValue) ? ' ' + taggedValue + '="' + getTaggedValue(stereotyp, taggedValue) + '"' : '' AS v -»
«v -»
«ENDLET -»
«ENDDEFINE»


«DEFINE Label FOR PElement -»
<label for="«name -»">«getHTMLInputElementLabel() -»</label>
«ENDDEFINE»